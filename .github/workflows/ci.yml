name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ci

    services:
      ***REMOVED***:
        image: ***REMOVED***:15-alpine
        env:
          POSTGRES_DB: webapp_template_test
          POSTGRES_USER: ***REMOVED***
          POSTGRES_PASSWORD: ***REMOVED***
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        run: pnpm db:generate
        env:
          DATABASE_URL: ***REMOVED***ql://***REMOVED***:***REMOVED***@localhost:5432/webapp_template_test

      - name: Run database migrations
        run: pnpm db:push
        env:
          DATABASE_URL: ***REMOVED***ql://***REMOVED***:***REMOVED***@localhost:5432/webapp_template_test

      - name: Run linting
        run: pnpm lint

      - name: Run type checking
        run: pnpm typecheck

      - name: Check formatting
        run: pnpm format:check

      - name: Build application
        run: pnpm build
        env:
          DATABASE_URL: ***REMOVED***ql://***REMOVED***:***REMOVED***@localhost:5432/webapp_template_test
          REDIS_URL: redis://localhost:6379

  security:
    runs-on: ubuntu-latest
    needs: test
    environment: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for secrets in code
        uses: trufflesecurity/trufflehog@main
        with:
          path: .
          base: HEAD~1
